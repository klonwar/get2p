#!/usr/bin/env node

const app = require('../app');
const chalk = require('chalk');
const http = require('http');
const https = require('https');
const fs = require('fs');

const prod = process.env.NODE_ENV === `production`;

const port = (prod) ? process.env.PORT : 3000;
app.set('port', port);


const server = (prod)
  ? http.createServer(app)
  : https.createServer({
    key: fs.readFileSync(`./bin/security/cert.key`),
    cert: fs.readFileSync(`./bin/security/cert.pem`)
  }, app);

server.listen(port);
console.log(chalk.green(`-@ Server is running on https://localhost:${port}`));

server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
});